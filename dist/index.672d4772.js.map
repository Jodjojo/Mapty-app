{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\n// prettier-ignore\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + ``).slice(-10);\n  clicks = 0\n\n  constructor(coords, distance, duration) {\n    this.coords = coords; //[lat, lng]\n    this.distance = distance; //in Km\n    this.duration = duration; // in minutes\n  }\n\n  _setDescription() {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n\n  click(){\n    this.clicks++\n  }\n}\n\nclass Running extends Workout {\n  type = 'running';\n\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\n\nclass Cycling extends Workout {\n  type = 'cycling';\n\n  constructor(coords, distance, duration, elevationGain) {\n    super(coords, distance, duration);\n    this.elevationGain = elevationGain;\n    // this.type = 'cycling';\n    this.calcSpeed();\n    this._setDescription();\n  }\n\n  calcSpeed() {\n    // km/h\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n///////////////////////////\n// APPLICATION ARCHITECTURE\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n\nclass App {\n  #map;\n  #mapZoomLevel = 13;\n  #mapEvent;\n  #workouts = [];\n  data;\n  constructor() {\n    // get users position\n    this._getPosition();\n    // attach event handlers\n    form.addEventListener(`submit`, this._newWorkout.bind(this));\n\n    inputType.addEventListener(`change`, this._toggleElevationField.bind(this));\n\n    containerWorkouts.addEventListener(`click`, this._moveToPopup.bind(this));\n\n    // Get data from local storage\n    this._getLocalStorage();\n  }\n\n  _getPosition() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          alert(`Could not get your position`);\n        }\n      );\n    }\n  }\n  _loadMap(position) {\n    {\n      // console.log(position);\n      const { latitude } = position.coords;\n      const { longitude } = position.coords;\n      // console.log(`https://www.google.com/maps/@${latitude},${longitude}`);\n\n      const coords = [latitude, longitude];\n      console.log(this);\n      this.#map = L.map('map').setView(coords, this.#mapZoomLevel);\n      //   console.log(map);\n      L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n        attribution:\n          '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n      }).addTo(this.#map);\n\n      //   HANDLING CLICKS ON MAP\n      this.#map.on(`click`, this._showForm.bind(this));\n\n      this.#workouts.forEach(work => this._renderWorkoutMarker(work));\n    }\n  }\n\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove(`hidden`);\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    // Empty inputs\n    // prettier-ignore\n    inputDistance.value = inputDuration.value = inputCadence.value =\n      inputElevation.value = '';\n\n    form.style.display = `none`;\n    form.classList.add(`hidden`);\n    setTimeout(() => (form.style.display = `grid`), 1000);\n  }\n  _toggleElevationField() {\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest(`.form__row`).classList.toggle(`form__row--hidden`);\n  }\n\n  _newWorkout(e) {\n    const validInputs = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp));\n\n    const allPositive = (...inputs) => inputs.every(inp => inp > 0);\n\n    e.preventDefault();\n\n    // get data from form\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n    let workout;\n    // If activity is running, create running object\n    if (type === `running`) {\n      const cadence = +inputCadence.value;\n      // check if data is valid\n      if (\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return alert(`Inputs have to be positive Numbers`);\n\n      workout = new Running([lat, lng], distance, duration, cadence);\n    }\n    // if workout is cycling, create cycling object\n    if (type === `cycling`) {\n      const elevation = +inputElevation.value;\n      // check if data is valid\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return alert(`Inputs have to be positive Numbers`);\n\n      workout = new Cycling([lat, lng], distance, duration, elevation);\n    }\n\n    // add new object to workout array\n    this.#workouts.push(workout);\n\n    // Render workout on map as marker\n    this._renderWorkoutMarker(workout);\n    // render workout on list\n    this._renderWorkout(workout);\n\n    // hide form and clear input fields\n    this._hideForm();\n\n    //SET LOCAL STORAGE TO ALL WORKOUTS\n    this._setLocalStorage();\n  }\n\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${workout.description}`\n      )\n      .openPopup();\n  }\n  _renderWorkout(workout) {\n    let html = `\n     <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n        <h2 class=\"workout__title\">${workout.description}</h2>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">${\n            workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'\n          }</span>\n          <span class=\"workout__value\">${workout.distance}</span>\n          <span class=\"workout__unit\">km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⏱</span>\n          <span class=\"workout__value\">${workout.duration}</span>\n          <span class=\"workout__unit\">min</span>\n        </div>\n    `;\n\n    if (workout.type === 'running')\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n          <span class=\"workout__unit\">min/km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">🦶🏼</span>\n          <span class=\"workout__value\">${workout.cadence}</span>\n          <span class=\"workout__unit\">spm</span>\n        </div>\n      </li>\n      `;\n\n    if (workout.type === 'cycling')\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n          <span class=\"workout__unit\">km/h</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⛰</span>\n          <span class=\"workout__value\">${workout.elevationGain}</span>\n          <span class=\"workout__unit\">m</span>\n        </div>\n      </li>\n      `;\n\n    form.insertAdjacentHTML('afterend', html);\n  }\n\n  _moveToPopup(e) {\n    const workoutEl = e.target.closest(`.workout`);\n    // console.log(workoutEl);\n\n    if (!workoutEl) return;\n\n    const workout = this.#workouts.find(\n      work => work.id === workoutEl.dataset.id\n    );\n\n    // console.log(workout);\n\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: { duration: 1 },\n    });\n\n    // USING THE PUBLIC INTEREFACE\n    workout.click();\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem(`workouts`, JSON.stringify(this.#workouts));\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem(`workouts`));\n    // console.log(data);\n\n    if (!data) return;\n\n    this.#workouts = data;\n\n    this.#workouts.forEach(work => this._renderWorkout(work));\n  }\n\n  reset() {\n    localStorage.removeItem(`workouts`);\n    location.reload();\n  }\n}\n\nconst app = new App();\n\n//2 dice\n//each player plays 1 no hold\n// spins 2 dice\n// automatically applies the score once and then switches roll\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}